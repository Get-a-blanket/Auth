name: Push-deploy

on:
  push:
    branches: [ "master" ]
    paths: ["GaB_Auth/GaB_Auth.csproj"]

jobs: 
  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: docker-compose up
        shell: bash 
        run: | 
          docker volume create db-data
          docker compose -f docker-compose/docker-compose.yml -f docker-compose/docker-compose.override.yml up -d

      - name: pause 
        shell: bash 
        run: sleep 10

      - name: docker ps
        shell: bash 
        run: docker ps -a

      - name: Get Core Status 
        shell: bash
        run: |
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_core:8080/System/Status' -H 'accept: text/plain' -k 
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_core:8080/System/Status' -H 'accept: text/plain' -k  -I

      - name: Get Core ProtectedDB Migrations
        shell: bash
        run: |
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_core:8080/System/GetProtectedDBMigrations' -H 'accept: text/plain' -k 
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_core:8080/System/GetProtectedDBMigrations' -H 'accept: text/plain' -k -I
          
      - name: Get Core UnprotectedDB Migrations 
        shell: bash
        run: |
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_core:8080/System/GetUnprotectedDBMigrations' -H 'accept: text/plain' -k 
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_core:8080/System/GetUnprotectedDBMigrations' -H 'accept: text/plain' -k -I
          
      - name: Get Auth Status 
        shell: bash
        run: |
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_auth:8080/System/Status' -H 'accept: text/plain' -k 
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_auth:8080/System/Status' -H 'accept: text/plain' -k  -I
          
      - name: Get Auth DB Migrations 
        shell: bash
        run: |
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_auth:8080/System/GetDBMigrations' -H 'accept: text/plain' -k 
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_auth:8080/System/GetDBMigrations' -H 'accept: text/plain' -k -I

      - name: Get Auth Test RequestForAuthentication 
        shell: bash
        run: |
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_auth:8080/Authentication/RequestForAuthentication?regionCodeId=7&phoneNumber=1234567890' -H 'accept: text/plain' -k 
          docker exec docker-compose-gab_auth-1 curl -X 'GET' 'http://gab_auth:8080/Authentication/RequestForAuthentication?regionCodeId=7&phoneNumber=1234567890' -H 'accept: text/plain' -k -I

  push:
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8'
          
      - name: Setup dotnet-ef
        run: |
          dotnet tool install --global dotnet-ef

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SECRET_PUSH_KEY }}
          fetch-depth: 0

      - name: Get version
        shell: bash
        run: |
          repo=$(echo "${{ steps.meta.outputs.tags }}" | sed "s/:master//")
          echo "REPO=$repo" >> $GITHUB_ENV
          echo "REPO=$repo" 
          read_dom () { local IFS=\> ; read -d \< ENTITY CONTENT ;}
          while read_dom; do
            if [[ $ENTITY = "AssemblyVersion" ]]; then
              echo "VERSION=$CONTENT" >> $GITHUB_ENV
              echo "VERSION=$CONTENT"
              exit
            fi
          done < GaB_Auth/GaB_Auth.csproj

      - name: Create migrations
        run: |
          dotnet ef migrations add ${{ env.VERSION }} --context GaB_Auth.DbConnector.ApplicationContext --project ./GaB_Auth/GaB_Auth.csproj
      
      - name: Commit
        shell: bash
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add GaB_Auth/Migrations
          git add GaB_Auth/Documentation.xml
          git commit -m "Auto created migrations"
          git tag ${{ env.VERSION }}

      - name: Push master
        shell: bash
        run: |
          git push origin master 

      - name: Push deploy
        shell: bash
        run: |
          git checkout --force deploy
          git merge master
          git push origin deploy 
      
      - name: Push tags
        shell: bash
        run: |
          git push origin --tags
